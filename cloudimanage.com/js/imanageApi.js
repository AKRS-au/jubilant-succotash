!function(e){var n;function t(e){(window.opener||window.parent).postMessage(JSON.stringify(e),n||"*")}(e=e||(window.imanage={})).ready=function(e){return new Promise((function(e,a){function i(t){try{var a=JSON.parse(t.data).data;a&&a.config&&a.config.serverBase===t.origin&&(n=t.origin,e(a))}catch(e){}}t({type:"ready",data:{}}),window.removeEventListener("message",i),window.addEventListener("message",i)}))},e.requestAuthNonce=function(){return new Promise((function(e,n){function a(t){try{var a=JSON.parse(t.data).data;a&&a.server_base===t.origin&&(null===a.auth_nonce?n("Unable to retrieve nonce for token."):e(a))}catch(e){}}t({type:"nonce"}),window.removeEventListener("message",a),window.addEventListener("message",a)}))},e.save=function(e){return new Promise((function(n,a){t({type:"save",data:e})}))},e.cancel=function(e){return new Promise((function(n,a){t({type:"cancel",data:e})}))},e.dialogs={handler:function(e,n){function t(n){e&&e(n.data)}var a=n||{};return window.addEventListener("message",t,a),()=>{window.removeEventListener("message",t,a)}}}}(window.imanage);